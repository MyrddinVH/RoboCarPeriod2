
robotcar.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00000a5e  00000af2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a5e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  0080010e  0080010e  00000b00  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b00  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b5c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00000b9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001225  00000000  00000000  00000c94  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009e3  00000000  00000000  00001eb9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000952  00000000  00000000  0000289c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000230  00000000  00000000  000031f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000525  00000000  00000000  00003420  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007d3  00000000  00000000  00003945  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00004118  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e5       	ldi	r30, 0x5E	; 94
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 30       	cpi	r26, 0x0E	; 14
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e0       	ldi	r26, 0x0E	; 14
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a1 31       	cpi	r26, 0x11	; 17
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b0 01 	call	0x360	; 0x360 <main>
  9e:	0c 94 2d 05 	jmp	0xa5a	; 0xa5a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <I2C_WRITESEQ>:
{
    wr_lcd_mode(cmd, 0);
}
void lcd_data(unsigned char data)
{
    wr_lcd_mode(data, 1);
  a6:	0f 93       	push	r16
  a8:	1f 93       	push	r17
  aa:	cf 93       	push	r28
  ac:	df 93       	push	r29
  ae:	8b 01       	movw	r16, r22
  b0:	d4 2f       	mov	r29, r20
  b2:	88 0f       	add	r24, r24
  b4:	0e 94 03 02 	call	0x406	; 0x406 <i2c_start>
  b8:	88 23       	and	r24, r24
  ba:	51 f0       	breq	.+20     	; 0xd0 <I2C_WRITESEQ+0x2a>
  bc:	c1 e0       	ldi	r28, 0x01	; 1
  be:	0c c0       	rjmp	.+24     	; 0xd8 <I2C_WRITESEQ+0x32>
  c0:	f8 01       	movw	r30, r16
  c2:	ec 0f       	add	r30, r28
  c4:	f1 1d       	adc	r31, r1
  c6:	80 81       	ld	r24, Z
  c8:	0e 94 31 02 	call	0x462	; 0x462 <i2c_write>
  cc:	cf 5f       	subi	r28, 0xFF	; 255
  ce:	01 c0       	rjmp	.+2      	; 0xd2 <I2C_WRITESEQ+0x2c>
  d0:	c0 e0       	ldi	r28, 0x00	; 0
  d2:	cd 17       	cp	r28, r29
  d4:	a8 f3       	brcs	.-22     	; 0xc0 <I2C_WRITESEQ+0x1a>
  d6:	c0 e0       	ldi	r28, 0x00	; 0
  d8:	0e 94 29 02 	call	0x452	; 0x452 <i2c_stop>
  dc:	8c 2f       	mov	r24, r28
  de:	df 91       	pop	r29
  e0:	cf 91       	pop	r28
  e2:	1f 91       	pop	r17
  e4:	0f 91       	pop	r16
  e6:	08 95       	ret

000000e8 <wr_lcd_mode>:
  e8:	0f 93       	push	r16
  ea:	1f 93       	push	r17
  ec:	cf 93       	push	r28
  ee:	df 93       	push	r29
  f0:	00 d0       	rcall	.+0      	; 0xf2 <wr_lcd_mode+0xa>
  f2:	00 d0       	rcall	.+0      	; 0xf4 <wr_lcd_mode+0xc>
  f4:	1f 92       	push	r1
  f6:	cd b7       	in	r28, 0x3d	; 61
  f8:	de b7       	in	r29, 0x3e	; 62
  fa:	08 2f       	mov	r16, r24
  fc:	68 30       	cpi	r22, 0x08	; 8
  fe:	71 f4       	brne	.+28     	; 0x11c <wr_lcd_mode+0x34>
 100:	88 23       	and	r24, r24
 102:	11 f0       	breq	.+4      	; 0x108 <wr_lcd_mode+0x20>
 104:	88 e0       	ldi	r24, 0x08	; 8
 106:	01 c0       	rjmp	.+2      	; 0x10a <wr_lcd_mode+0x22>
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 10e:	41 e0       	ldi	r20, 0x01	; 1
 110:	60 e0       	ldi	r22, 0x00	; 0
 112:	71 e0       	ldi	r23, 0x01	; 1
 114:	87 e2       	ldi	r24, 0x27	; 39
 116:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_WRITESEQ>
 11a:	26 c0       	rjmp	.+76     	; 0x168 <wr_lcd_mode+0x80>
 11c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 120:	16 2f       	mov	r17, r22
 122:	18 2b       	or	r17, r24
 124:	19 83       	std	Y+1, r17	; 0x01
 126:	80 2f       	mov	r24, r16
 128:	80 7f       	andi	r24, 0xF0	; 240
 12a:	81 2b       	or	r24, r17
 12c:	84 60       	ori	r24, 0x04	; 4
 12e:	8a 83       	std	Y+2, r24	; 0x02
 130:	8b 7f       	andi	r24, 0xFB	; 251
 132:	8b 83       	std	Y+3, r24	; 0x03
 134:	20 e1       	ldi	r18, 0x10	; 16
 136:	02 9f       	mul	r16, r18
 138:	c0 01       	movw	r24, r0
 13a:	11 24       	eor	r1, r1
 13c:	81 2b       	or	r24, r17
 13e:	84 60       	ori	r24, 0x04	; 4
 140:	8c 83       	std	Y+4, r24	; 0x04
 142:	8b 7f       	andi	r24, 0xFB	; 251
 144:	8d 83       	std	Y+5, r24	; 0x05
 146:	45 e0       	ldi	r20, 0x05	; 5
 148:	be 01       	movw	r22, r28
 14a:	6f 5f       	subi	r22, 0xFF	; 255
 14c:	7f 4f       	sbci	r23, 0xFF	; 255
 14e:	87 e2       	ldi	r24, 0x27	; 39
 150:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_WRITESEQ>
 154:	10 fd       	sbrc	r17, 0
 156:	08 c0       	rjmp	.+16     	; 0x168 <wr_lcd_mode+0x80>
 158:	03 30       	cpi	r16, 0x03	; 3
 15a:	30 f4       	brcc	.+12     	; 0x168 <wr_lcd_mode+0x80>
 15c:	e3 ef       	ldi	r30, 0xF3	; 243
 15e:	f1 e0       	ldi	r31, 0x01	; 1
 160:	31 97       	sbiw	r30, 0x01	; 1
 162:	f1 f7       	brne	.-4      	; 0x160 <wr_lcd_mode+0x78>
 164:	00 c0       	rjmp	.+0      	; 0x166 <wr_lcd_mode+0x7e>
 166:	00 00       	nop
 168:	0f 90       	pop	r0
 16a:	0f 90       	pop	r0
 16c:	0f 90       	pop	r0
 16e:	0f 90       	pop	r0
 170:	0f 90       	pop	r0
 172:	df 91       	pop	r29
 174:	cf 91       	pop	r28
 176:	1f 91       	pop	r17
 178:	0f 91       	pop	r16
 17a:	08 95       	ret

0000017c <lcd_gotoxy>:
 17c:	cf 93       	push	r28
 17e:	df 93       	push	r29
 180:	d8 2f       	mov	r29, r24
 182:	c6 2f       	mov	r28, r22
 184:	e6 2f       	mov	r30, r22
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	ef 5f       	subi	r30, 0xFF	; 255
 18a:	fe 4f       	sbci	r31, 0xFE	; 254
 18c:	80 81       	ld	r24, Z
 18e:	8d 2b       	or	r24, r29
 190:	60 e0       	ldi	r22, 0x00	; 0
 192:	80 68       	ori	r24, 0x80	; 128
 194:	0e 94 74 00 	call	0xe8	; 0xe8 <wr_lcd_mode>
 198:	d0 93 0f 01 	sts	0x010F, r29	; 0x80010f <_lcd_x>
 19c:	c0 93 10 01 	sts	0x0110, r28	; 0x800110 <_lcd_y>
 1a0:	df 91       	pop	r29
 1a2:	cf 91       	pop	r28
 1a4:	08 95       	ret

000001a6 <lcd_clrscr>:
 1a6:	60 e0       	ldi	r22, 0x00	; 0
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	0e 94 74 00 	call	0xe8	; 0xe8 <wr_lcd_mode>
 1ae:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <_lcd_y>
 1b2:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <_lcd_x>
 1b6:	08 95       	ret

000001b8 <lcd_putc>:
 1b8:	cf 93       	push	r28
 1ba:	c8 2f       	mov	r28, r24
 1bc:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <_lcd_x>
 1c0:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
 1c4:	98 17       	cp	r25, r24
 1c6:	10 f4       	brcc	.+4      	; 0x1cc <lcd_putc+0x14>
 1c8:	ca 30       	cpi	r28, 0x0A	; 10
 1ca:	41 f4       	brne	.+16     	; 0x1dc <lcd_putc+0x24>
 1cc:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <_lcd_y>
 1d0:	6f 5f       	subi	r22, 0xFF	; 255
 1d2:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <_lcd_y>
 1d6:	80 e0       	ldi	r24, 0x00	; 0
 1d8:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_gotoxy>
 1dc:	ca 30       	cpi	r28, 0x0A	; 10
 1de:	49 f0       	breq	.+18     	; 0x1f2 <lcd_putc+0x3a>
 1e0:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <_lcd_x>
 1e4:	8f 5f       	subi	r24, 0xFF	; 255
 1e6:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <_lcd_x>
 1ea:	61 e0       	ldi	r22, 0x01	; 1
 1ec:	8c 2f       	mov	r24, r28
 1ee:	0e 94 74 00 	call	0xe8	; 0xe8 <wr_lcd_mode>
 1f2:	cf 91       	pop	r28
 1f4:	08 95       	ret

000001f6 <lcd_puts>:
 1f6:	cf 93       	push	r28
 1f8:	df 93       	push	r29
 1fa:	ec 01       	movw	r28, r24
 1fc:	03 c0       	rjmp	.+6      	; 0x204 <lcd_puts+0xe>
 1fe:	21 96       	adiw	r28, 0x01	; 1
 200:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <lcd_putc>
 204:	88 81       	ld	r24, Y
 206:	81 11       	cpse	r24, r1
 208:	fa cf       	rjmp	.-12     	; 0x1fe <lcd_puts+0x8>
 20a:	df 91       	pop	r29
 20c:	cf 91       	pop	r28
 20e:	08 95       	ret

00000210 <lcd_init>:
}
// initialize the LCD controller
void lcd_init(unsigned char command)
{
 210:	0f 93       	push	r16
 212:	1f 93       	push	r17
 214:	cf 93       	push	r28
 216:	df 93       	push	r29
 218:	00 d0       	rcall	.+0      	; 0x21a <lcd_init+0xa>
 21a:	00 d0       	rcall	.+0      	; 0x21c <lcd_init+0xc>
 21c:	00 d0       	rcall	.+0      	; 0x21e <lcd_init+0xe>
 21e:	cd b7       	in	r28, 0x3d	; 61
 220:	de b7       	in	r29, 0x3e	; 62
 222:	08 2f       	mov	r16, r24
    uint8_t nibbleval30[] = {0x30, 0x34, 0x30};
 224:	80 e3       	ldi	r24, 0x30	; 48
 226:	89 83       	std	Y+1, r24	; 0x01
 228:	94 e3       	ldi	r25, 0x34	; 52
 22a:	9a 83       	std	Y+2, r25	; 0x02
 22c:	8b 83       	std	Y+3, r24	; 0x03
    uint8_t nibbleval20[] = {0x20, 0x24, 0x20};
 22e:	80 e2       	ldi	r24, 0x20	; 32
 230:	8c 83       	std	Y+4, r24	; 0x04
 232:	94 e2       	ldi	r25, 0x24	; 36
 234:	9d 83       	std	Y+5, r25	; 0x05
 236:	8e 83       	std	Y+6, r24	; 0x06
	uint8_t ret = 0;
    _lcd_maxx = LCD_DISP_LENGTH;
 238:	80 e1       	ldi	r24, 0x10	; 16
 23a:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__data_end>
    _base_y[2] = _base_y[0] + _lcd_maxx;
 23e:	e1 e0       	ldi	r30, 0x01	; 1
 240:	f1 e0       	ldi	r31, 0x01	; 1
 242:	80 81       	ld	r24, Z
 244:	80 5f       	subi	r24, 0xF0	; 240
 246:	82 83       	std	Z+2, r24	; 0x02
    _base_y[3] = _base_y[1] + _lcd_maxx;
 248:	81 81       	ldd	r24, Z+1	; 0x01
 24a:	80 5f       	subi	r24, 0xF0	; 240
 24c:	83 83       	std	Z+3, r24	; 0x03
    DDRB |= (1<<5); PORTB |= (1<<5);
 24e:	84 b1       	in	r24, 0x04	; 4
 250:	80 62       	ori	r24, 0x20	; 32
 252:	84 b9       	out	0x04, r24	; 4
 254:	85 b1       	in	r24, 0x05	; 5
 256:	80 62       	ori	r24, 0x20	; 32
 258:	85 b9       	out	0x05, r24	; 5
    I2C_INIT();
 25a:	0e 94 fd 01 	call	0x3fa	; 0x3fa <i2c_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 25e:	8b e4       	ldi	r24, 0x4B	; 75
 260:	9d e1       	ldi	r25, 0x1D	; 29
 262:	01 97       	sbiw	r24, 0x01	; 1
 264:	f1 f7       	brne	.-4      	; 0x262 <lcd_init+0x52>
 266:	00 c0       	rjmp	.+0      	; 0x268 <lcd_init+0x58>
 268:	00 00       	nop
    _delay_ms(30);               // 30 ms Delay nach power-up
    ret |= I2C_WRITESEQ(PCF8574A, nibbleval30, 3);    //0x3- 8-bit  
 26a:	43 e0       	ldi	r20, 0x03	; 3
 26c:	be 01       	movw	r22, r28
 26e:	6f 5f       	subi	r22, 0xFF	; 255
 270:	7f 4f       	sbci	r23, 0xFF	; 255
 272:	87 e2       	ldi	r24, 0x27	; 39
 274:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_WRITESEQ>
 278:	18 2f       	mov	r17, r24
 27a:	81 ee       	ldi	r24, 0xE1	; 225
 27c:	94 e0       	ldi	r25, 0x04	; 4
 27e:	01 97       	sbiw	r24, 0x01	; 1
 280:	f1 f7       	brne	.-4      	; 0x27e <lcd_init+0x6e>
 282:	00 c0       	rjmp	.+0      	; 0x284 <lcd_init+0x74>
 284:	00 00       	nop
    _delay_ms(5);
    ret |= I2C_WRITESEQ(PCF8574A, nibbleval30, 3);    //0x3- 8-bit
 286:	43 e0       	ldi	r20, 0x03	; 3
 288:	be 01       	movw	r22, r28
 28a:	6f 5f       	subi	r22, 0xFF	; 255
 28c:	7f 4f       	sbci	r23, 0xFF	; 255
 28e:	87 e2       	ldi	r24, 0x27	; 39
 290:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_WRITESEQ>
 294:	18 2b       	or	r17, r24
    ret |= I2C_WRITESEQ(PCF8574A, nibbleval30, 3);    //0x3- 8-bit
 296:	43 e0       	ldi	r20, 0x03	; 3
 298:	be 01       	movw	r22, r28
 29a:	6f 5f       	subi	r22, 0xFF	; 255
 29c:	7f 4f       	sbci	r23, 0xFF	; 255
 29e:	87 e2       	ldi	r24, 0x27	; 39
 2a0:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_WRITESEQ>
 2a4:	18 2b       	or	r17, r24
    ret |= I2C_WRITESEQ(PCF8574A, nibbleval20, 3);    //0x2- 8-bit
 2a6:	43 e0       	ldi	r20, 0x03	; 3
 2a8:	be 01       	movw	r22, r28
 2aa:	6c 5f       	subi	r22, 0xFC	; 252
 2ac:	7f 4f       	sbci	r23, 0xFF	; 255
 2ae:	87 e2       	ldi	r24, 0x27	; 39
 2b0:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_WRITESEQ>
 2b4:	18 2b       	or	r17, r24
	ret |= wr_lcd_mode(0x28, 0);                      //0x28 set 4-bit 2 lines
 2b6:	60 e0       	ldi	r22, 0x00	; 0
 2b8:	88 e2       	ldi	r24, 0x28	; 40
 2ba:	0e 94 74 00 	call	0xe8	; 0xe8 <wr_lcd_mode>
 2be:	81 2b       	or	r24, r17
    if (ret) { PORTB &= ~(1<<5); }
 2c0:	19 f0       	breq	.+6      	; 0x2c8 <lcd_init+0xb8>
 2c2:	85 b1       	in	r24, 0x05	; 5
 2c4:	8f 7d       	andi	r24, 0xDF	; 223
 2c6:	85 b9       	out	0x05, r24	; 5
    wr_lcd_mode(0x0c, 0);
 2c8:	60 e0       	ldi	r22, 0x00	; 0
 2ca:	8c e0       	ldi	r24, 0x0C	; 12
 2cc:	0e 94 74 00 	call	0xe8	; 0xe8 <wr_lcd_mode>
    wr_lcd_mode(0x06, 0);
 2d0:	60 e0       	ldi	r22, 0x00	; 0
 2d2:	86 e0       	ldi	r24, 0x06	; 6
 2d4:	0e 94 74 00 	call	0xe8	; 0xe8 <wr_lcd_mode>
    wr_lcd_mode(0x01, 0);
 2d8:	60 e0       	ldi	r22, 0x00	; 0
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	0e 94 74 00 	call	0xe8	; 0xe8 <wr_lcd_mode>
    wr_lcd_mode(command, 0);
 2e0:	60 e0       	ldi	r22, 0x00	; 0
 2e2:	80 2f       	mov	r24, r16
 2e4:	0e 94 74 00 	call	0xe8	; 0xe8 <wr_lcd_mode>
}
 2e8:	26 96       	adiw	r28, 0x06	; 6
 2ea:	0f b6       	in	r0, 0x3f	; 63
 2ec:	f8 94       	cli
 2ee:	de bf       	out	0x3e, r29	; 62
 2f0:	0f be       	out	0x3f, r0	; 63
 2f2:	cd bf       	out	0x3d, r28	; 61
 2f4:	df 91       	pop	r29
 2f6:	cf 91       	pop	r28
 2f8:	1f 91       	pop	r17
 2fa:	0f 91       	pop	r16
 2fc:	08 95       	ret

000002fe <lcd_backlight>:

void lcd_backlight(char on)
{
    wr_lcd_mode(on, 8);
 2fe:	68 e0       	ldi	r22, 0x08	; 8
 300:	0e 94 74 00 	call	0xe8	; 0xe8 <wr_lcd_mode>
 304:	08 95       	ret

00000306 <variableLCD>:
}

variableLCD(int N){
 306:	0f 93       	push	r16
 308:	1f 93       	push	r17
 30a:	cf 93       	push	r28
 30c:	df 93       	push	r29
 30e:	cd b7       	in	r28, 0x3d	; 61
 310:	de b7       	in	r29, 0x3e	; 62
 312:	64 97       	sbiw	r28, 0x14	; 20
 314:	0f b6       	in	r0, 0x3f	; 63
 316:	f8 94       	cli
 318:	de bf       	out	0x3e, r29	; 62
 31a:	0f be       	out	0x3f, r0	; 63
 31c:	cd bf       	out	0x3d, r28	; 61
	 char str [20];
	    sprintf(str, "%d", N);
 31e:	9f 93       	push	r25
 320:	8f 93       	push	r24
 322:	85 e0       	ldi	r24, 0x05	; 5
 324:	91 e0       	ldi	r25, 0x01	; 1
 326:	9f 93       	push	r25
 328:	8f 93       	push	r24
 32a:	8e 01       	movw	r16, r28
 32c:	0f 5f       	subi	r16, 0xFF	; 255
 32e:	1f 4f       	sbci	r17, 0xFF	; 255
 330:	1f 93       	push	r17
 332:	0f 93       	push	r16
 334:	0e 94 43 02 	call	0x486	; 0x486 <sprintf>
		lcd_puts(str);
 338:	c8 01       	movw	r24, r16
 33a:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <lcd_puts>
}
 33e:	0f 90       	pop	r0
 340:	0f 90       	pop	r0
 342:	0f 90       	pop	r0
 344:	0f 90       	pop	r0
 346:	0f 90       	pop	r0
 348:	0f 90       	pop	r0
 34a:	64 96       	adiw	r28, 0x14	; 20
 34c:	0f b6       	in	r0, 0x3f	; 63
 34e:	f8 94       	cli
 350:	de bf       	out	0x3e, r29	; 62
 352:	0f be       	out	0x3f, r0	; 63
 354:	cd bf       	out	0x3d, r28	; 61
 356:	df 91       	pop	r29
 358:	cf 91       	pop	r28
 35a:	1f 91       	pop	r17
 35c:	0f 91       	pop	r16
 35e:	08 95       	ret

00000360 <main>:
#include "timeSaving.h"
#include "modeSwitch.h"

int main(void){

    DDRD |= (1<<DDD5) | (1<<DDD7);
 360:	8a b1       	in	r24, 0x0a	; 10
 362:	80 6a       	ori	r24, 0xA0	; 160
 364:	8a b9       	out	0x0a, r24	; 10

    DDRD |= (1<<DDD5) | (1<<DDD7) | (1<<DDD6);
 366:	8a b1       	in	r24, 0x0a	; 10
 368:	80 6e       	ori	r24, 0xE0	; 224
 36a:	8a b9       	out	0x0a, r24	; 10

	DDRB |= (1<<DDB0) | (1<<DDB1) | (1<<DDB2);
 36c:	84 b1       	in	r24, 0x04	; 4
 36e:	87 60       	ori	r24, 0x07	; 7
 370:	84 b9       	out	0x04, r24	; 4
	
	// PWM setup
	TCCR0A |= (1<<WGM00);
 372:	84 b5       	in	r24, 0x24	; 36
 374:	81 60       	ori	r24, 0x01	; 1
 376:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<CS02) | (1<<CS00);
 378:	85 b5       	in	r24, 0x25	; 37
 37a:	85 60       	ori	r24, 0x05	; 5
 37c:	85 bd       	out	0x25, r24	; 37
	// Set Compare Output Mode for both channels A and B

	TCCR0A |= (1<<COM0A1)  | (1<<COM0B1) ;
 37e:	84 b5       	in	r24, 0x24	; 36
 380:	80 6a       	ori	r24, 0xA0	; 160
 382:	84 bd       	out	0x24, r24	; 36

	// Initial speed set
	OCR0A = 0;
 384:	17 bc       	out	0x27, r1	; 39
	OCR0B = 0;
 386:	18 bc       	out	0x28, r1	; 40
	
    lcd_init(LCD_ON_DISPLAY);
 388:	82 e0       	ldi	r24, 0x02	; 2
 38a:	0e 94 08 01 	call	0x210	; 0x210 <lcd_init>
    lcd_backlight(0);
 38e:	80 e0       	ldi	r24, 0x00	; 0
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	0e 94 7f 01 	call	0x2fe	; 0x2fe <lcd_backlight>
 396:	2f ef       	ldi	r18, 0xFF	; 255
 398:	89 e6       	ldi	r24, 0x69	; 105
 39a:	98 e1       	ldi	r25, 0x18	; 24
 39c:	21 50       	subi	r18, 0x01	; 1
 39e:	80 40       	sbci	r24, 0x00	; 0
 3a0:	90 40       	sbci	r25, 0x00	; 0
 3a2:	e1 f7       	brne	.-8      	; 0x39c <main+0x3c>
 3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <main+0x46>
 3a6:	00 00       	nop
    _delay_ms(500);
    lcd_backlight(1);
 3a8:	81 e0       	ldi	r24, 0x01	; 1
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	0e 94 7f 01 	call	0x2fe	; 0x2fe <lcd_backlight>
 3b0:	2f ef       	ldi	r18, 0xFF	; 255
 3b2:	89 e6       	ldi	r24, 0x69	; 105
 3b4:	98 e1       	ldi	r25, 0x18	; 24
 3b6:	21 50       	subi	r18, 0x01	; 1
 3b8:	80 40       	sbci	r24, 0x00	; 0
 3ba:	90 40       	sbci	r25, 0x00	; 0
 3bc:	e1 f7       	brne	.-8      	; 0x3b6 <main+0x56>
 3be:	00 c0       	rjmp	.+0      	; 0x3c0 <main+0x60>
 3c0:	00 00       	nop
    _delay_ms(500);		

    while (1){
		int test = 200;
        lcd_clrscr();
 3c2:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcd_clrscr>
        lcd_gotoxy(0, 0);
 3c6:	60 e0       	ldi	r22, 0x00	; 0
 3c8:	80 e0       	ldi	r24, 0x00	; 0
 3ca:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_gotoxy>
		variableLCD(test);
 3ce:	88 ec       	ldi	r24, 0xC8	; 200
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	0e 94 83 01 	call	0x306	; 0x306 <variableLCD>
        lcd_gotoxy(1, 1);
 3d6:	61 e0       	ldi	r22, 0x01	; 1
 3d8:	81 e0       	ldi	r24, 0x01	; 1
 3da:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_gotoxy>
        lcd_puts("test");
 3de:	88 e0       	ldi	r24, 0x08	; 8
 3e0:	91 e0       	ldi	r25, 0x01	; 1
 3e2:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <lcd_puts>
 3e6:	2f ef       	ldi	r18, 0xFF	; 255
 3e8:	83 ed       	ldi	r24, 0xD3	; 211
 3ea:	90 e3       	ldi	r25, 0x30	; 48
 3ec:	21 50       	subi	r18, 0x01	; 1
 3ee:	80 40       	sbci	r24, 0x00	; 0
 3f0:	90 40       	sbci	r25, 0x00	; 0
 3f2:	e1 f7       	brne	.-8      	; 0x3ec <main+0x8c>
 3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <main+0x96>
 3f6:	00 00       	nop
 3f8:	e4 cf       	rjmp	.-56     	; 0x3c2 <main+0x62>

000003fa <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
 3fa:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 3fe:	8c e0       	ldi	r24, 0x0C	; 12
 400:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
 404:	08 95       	ret

00000406 <i2c_start>:
 406:	94 ea       	ldi	r25, 0xA4	; 164
 408:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 40c:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 410:	99 23       	and	r25, r25
 412:	e4 f7       	brge	.-8      	; 0x40c <i2c_start+0x6>
 414:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 418:	98 7f       	andi	r25, 0xF8	; 248
 41a:	98 30       	cpi	r25, 0x08	; 8
 41c:	11 f0       	breq	.+4      	; 0x422 <i2c_start+0x1c>
 41e:	90 31       	cpi	r25, 0x10	; 16
 420:	91 f4       	brne	.+36     	; 0x446 <i2c_start+0x40>
 422:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 426:	84 e8       	ldi	r24, 0x84	; 132
 428:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 42c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 430:	88 23       	and	r24, r24
 432:	e4 f7       	brge	.-8      	; 0x42c <i2c_start+0x26>
 434:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 438:	88 7f       	andi	r24, 0xF8	; 248
 43a:	88 31       	cpi	r24, 0x18	; 24
 43c:	31 f0       	breq	.+12     	; 0x44a <i2c_start+0x44>
 43e:	80 34       	cpi	r24, 0x40	; 64
 440:	31 f4       	brne	.+12     	; 0x44e <i2c_start+0x48>
 442:	80 e0       	ldi	r24, 0x00	; 0
 444:	08 95       	ret
 446:	81 e0       	ldi	r24, 0x01	; 1
 448:	08 95       	ret
 44a:	80 e0       	ldi	r24, 0x00	; 0
 44c:	08 95       	ret
 44e:	81 e0       	ldi	r24, 0x01	; 1
 450:	08 95       	ret

00000452 <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
 452:	84 e9       	ldi	r24, 0x94	; 148
 454:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
 458:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 45c:	84 fd       	sbrc	r24, 4
 45e:	fc cf       	rjmp	.-8      	; 0x458 <i2c_stop+0x6>

}/* i2c_stop */
 460:	08 95       	ret

00000462 <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
 462:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
 466:	84 e8       	ldi	r24, 0x84	; 132
 468:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
 46c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 470:	88 23       	and	r24, r24
 472:	e4 f7       	brge	.-8      	; 0x46c <i2c_write+0xa>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
 474:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 478:	88 7f       	andi	r24, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
 47a:	88 32       	cpi	r24, 0x28	; 40
 47c:	11 f0       	breq	.+4      	; 0x482 <i2c_write+0x20>
 47e:	81 e0       	ldi	r24, 0x01	; 1
 480:	08 95       	ret
	return 0;
 482:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_write */
 484:	08 95       	ret

00000486 <sprintf>:
 486:	ae e0       	ldi	r26, 0x0E	; 14
 488:	b0 e0       	ldi	r27, 0x00	; 0
 48a:	e9 e4       	ldi	r30, 0x49	; 73
 48c:	f2 e0       	ldi	r31, 0x02	; 2
 48e:	0c 94 04 05 	jmp	0xa08	; 0xa08 <__prologue_saves__+0x1c>
 492:	0d 89       	ldd	r16, Y+21	; 0x15
 494:	1e 89       	ldd	r17, Y+22	; 0x16
 496:	86 e0       	ldi	r24, 0x06	; 6
 498:	8c 83       	std	Y+4, r24	; 0x04
 49a:	1a 83       	std	Y+2, r17	; 0x02
 49c:	09 83       	std	Y+1, r16	; 0x01
 49e:	8f ef       	ldi	r24, 0xFF	; 255
 4a0:	9f e7       	ldi	r25, 0x7F	; 127
 4a2:	9e 83       	std	Y+6, r25	; 0x06
 4a4:	8d 83       	std	Y+5, r24	; 0x05
 4a6:	ae 01       	movw	r20, r28
 4a8:	47 5e       	subi	r20, 0xE7	; 231
 4aa:	5f 4f       	sbci	r21, 0xFF	; 255
 4ac:	6f 89       	ldd	r22, Y+23	; 0x17
 4ae:	78 8d       	ldd	r23, Y+24	; 0x18
 4b0:	ce 01       	movw	r24, r28
 4b2:	01 96       	adiw	r24, 0x01	; 1
 4b4:	0e 94 65 02 	call	0x4ca	; 0x4ca <vfprintf>
 4b8:	ef 81       	ldd	r30, Y+7	; 0x07
 4ba:	f8 85       	ldd	r31, Y+8	; 0x08
 4bc:	e0 0f       	add	r30, r16
 4be:	f1 1f       	adc	r31, r17
 4c0:	10 82       	st	Z, r1
 4c2:	2e 96       	adiw	r28, 0x0e	; 14
 4c4:	e4 e0       	ldi	r30, 0x04	; 4
 4c6:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__epilogue_restores__+0x1c>

000004ca <vfprintf>:
 4ca:	ab e0       	ldi	r26, 0x0B	; 11
 4cc:	b0 e0       	ldi	r27, 0x00	; 0
 4ce:	eb e6       	ldi	r30, 0x6B	; 107
 4d0:	f2 e0       	ldi	r31, 0x02	; 2
 4d2:	0c 94 f6 04 	jmp	0x9ec	; 0x9ec <__prologue_saves__>
 4d6:	6c 01       	movw	r12, r24
 4d8:	7b 01       	movw	r14, r22
 4da:	8a 01       	movw	r16, r20
 4dc:	fc 01       	movw	r30, r24
 4de:	17 82       	std	Z+7, r1	; 0x07
 4e0:	16 82       	std	Z+6, r1	; 0x06
 4e2:	83 81       	ldd	r24, Z+3	; 0x03
 4e4:	81 ff       	sbrs	r24, 1
 4e6:	cc c1       	rjmp	.+920    	; 0x880 <__DATA_REGION_LENGTH__+0x80>
 4e8:	ce 01       	movw	r24, r28
 4ea:	01 96       	adiw	r24, 0x01	; 1
 4ec:	3c 01       	movw	r6, r24
 4ee:	f6 01       	movw	r30, r12
 4f0:	93 81       	ldd	r25, Z+3	; 0x03
 4f2:	f7 01       	movw	r30, r14
 4f4:	93 fd       	sbrc	r25, 3
 4f6:	85 91       	lpm	r24, Z+
 4f8:	93 ff       	sbrs	r25, 3
 4fa:	81 91       	ld	r24, Z+
 4fc:	7f 01       	movw	r14, r30
 4fe:	88 23       	and	r24, r24
 500:	09 f4       	brne	.+2      	; 0x504 <vfprintf+0x3a>
 502:	ba c1       	rjmp	.+884    	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 504:	85 32       	cpi	r24, 0x25	; 37
 506:	39 f4       	brne	.+14     	; 0x516 <vfprintf+0x4c>
 508:	93 fd       	sbrc	r25, 3
 50a:	85 91       	lpm	r24, Z+
 50c:	93 ff       	sbrs	r25, 3
 50e:	81 91       	ld	r24, Z+
 510:	7f 01       	movw	r14, r30
 512:	85 32       	cpi	r24, 0x25	; 37
 514:	29 f4       	brne	.+10     	; 0x520 <vfprintf+0x56>
 516:	b6 01       	movw	r22, r12
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <fputc>
 51e:	e7 cf       	rjmp	.-50     	; 0x4ee <vfprintf+0x24>
 520:	91 2c       	mov	r9, r1
 522:	21 2c       	mov	r2, r1
 524:	31 2c       	mov	r3, r1
 526:	ff e1       	ldi	r31, 0x1F	; 31
 528:	f3 15       	cp	r31, r3
 52a:	d8 f0       	brcs	.+54     	; 0x562 <vfprintf+0x98>
 52c:	8b 32       	cpi	r24, 0x2B	; 43
 52e:	79 f0       	breq	.+30     	; 0x54e <vfprintf+0x84>
 530:	38 f4       	brcc	.+14     	; 0x540 <vfprintf+0x76>
 532:	80 32       	cpi	r24, 0x20	; 32
 534:	79 f0       	breq	.+30     	; 0x554 <vfprintf+0x8a>
 536:	83 32       	cpi	r24, 0x23	; 35
 538:	a1 f4       	brne	.+40     	; 0x562 <vfprintf+0x98>
 53a:	23 2d       	mov	r18, r3
 53c:	20 61       	ori	r18, 0x10	; 16
 53e:	1d c0       	rjmp	.+58     	; 0x57a <vfprintf+0xb0>
 540:	8d 32       	cpi	r24, 0x2D	; 45
 542:	61 f0       	breq	.+24     	; 0x55c <vfprintf+0x92>
 544:	80 33       	cpi	r24, 0x30	; 48
 546:	69 f4       	brne	.+26     	; 0x562 <vfprintf+0x98>
 548:	23 2d       	mov	r18, r3
 54a:	21 60       	ori	r18, 0x01	; 1
 54c:	16 c0       	rjmp	.+44     	; 0x57a <vfprintf+0xb0>
 54e:	83 2d       	mov	r24, r3
 550:	82 60       	ori	r24, 0x02	; 2
 552:	38 2e       	mov	r3, r24
 554:	e3 2d       	mov	r30, r3
 556:	e4 60       	ori	r30, 0x04	; 4
 558:	3e 2e       	mov	r3, r30
 55a:	2a c0       	rjmp	.+84     	; 0x5b0 <vfprintf+0xe6>
 55c:	f3 2d       	mov	r31, r3
 55e:	f8 60       	ori	r31, 0x08	; 8
 560:	1d c0       	rjmp	.+58     	; 0x59c <vfprintf+0xd2>
 562:	37 fc       	sbrc	r3, 7
 564:	2d c0       	rjmp	.+90     	; 0x5c0 <vfprintf+0xf6>
 566:	20 ed       	ldi	r18, 0xD0	; 208
 568:	28 0f       	add	r18, r24
 56a:	2a 30       	cpi	r18, 0x0A	; 10
 56c:	40 f0       	brcs	.+16     	; 0x57e <vfprintf+0xb4>
 56e:	8e 32       	cpi	r24, 0x2E	; 46
 570:	b9 f4       	brne	.+46     	; 0x5a0 <vfprintf+0xd6>
 572:	36 fc       	sbrc	r3, 6
 574:	81 c1       	rjmp	.+770    	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 576:	23 2d       	mov	r18, r3
 578:	20 64       	ori	r18, 0x40	; 64
 57a:	32 2e       	mov	r3, r18
 57c:	19 c0       	rjmp	.+50     	; 0x5b0 <vfprintf+0xe6>
 57e:	36 fe       	sbrs	r3, 6
 580:	06 c0       	rjmp	.+12     	; 0x58e <vfprintf+0xc4>
 582:	8a e0       	ldi	r24, 0x0A	; 10
 584:	98 9e       	mul	r9, r24
 586:	20 0d       	add	r18, r0
 588:	11 24       	eor	r1, r1
 58a:	92 2e       	mov	r9, r18
 58c:	11 c0       	rjmp	.+34     	; 0x5b0 <vfprintf+0xe6>
 58e:	ea e0       	ldi	r30, 0x0A	; 10
 590:	2e 9e       	mul	r2, r30
 592:	20 0d       	add	r18, r0
 594:	11 24       	eor	r1, r1
 596:	22 2e       	mov	r2, r18
 598:	f3 2d       	mov	r31, r3
 59a:	f0 62       	ori	r31, 0x20	; 32
 59c:	3f 2e       	mov	r3, r31
 59e:	08 c0       	rjmp	.+16     	; 0x5b0 <vfprintf+0xe6>
 5a0:	8c 36       	cpi	r24, 0x6C	; 108
 5a2:	21 f4       	brne	.+8      	; 0x5ac <vfprintf+0xe2>
 5a4:	83 2d       	mov	r24, r3
 5a6:	80 68       	ori	r24, 0x80	; 128
 5a8:	38 2e       	mov	r3, r24
 5aa:	02 c0       	rjmp	.+4      	; 0x5b0 <vfprintf+0xe6>
 5ac:	88 36       	cpi	r24, 0x68	; 104
 5ae:	41 f4       	brne	.+16     	; 0x5c0 <vfprintf+0xf6>
 5b0:	f7 01       	movw	r30, r14
 5b2:	93 fd       	sbrc	r25, 3
 5b4:	85 91       	lpm	r24, Z+
 5b6:	93 ff       	sbrs	r25, 3
 5b8:	81 91       	ld	r24, Z+
 5ba:	7f 01       	movw	r14, r30
 5bc:	81 11       	cpse	r24, r1
 5be:	b3 cf       	rjmp	.-154    	; 0x526 <vfprintf+0x5c>
 5c0:	98 2f       	mov	r25, r24
 5c2:	9f 7d       	andi	r25, 0xDF	; 223
 5c4:	95 54       	subi	r25, 0x45	; 69
 5c6:	93 30       	cpi	r25, 0x03	; 3
 5c8:	28 f4       	brcc	.+10     	; 0x5d4 <vfprintf+0x10a>
 5ca:	0c 5f       	subi	r16, 0xFC	; 252
 5cc:	1f 4f       	sbci	r17, 0xFF	; 255
 5ce:	9f e3       	ldi	r25, 0x3F	; 63
 5d0:	99 83       	std	Y+1, r25	; 0x01
 5d2:	0d c0       	rjmp	.+26     	; 0x5ee <vfprintf+0x124>
 5d4:	83 36       	cpi	r24, 0x63	; 99
 5d6:	31 f0       	breq	.+12     	; 0x5e4 <vfprintf+0x11a>
 5d8:	83 37       	cpi	r24, 0x73	; 115
 5da:	71 f0       	breq	.+28     	; 0x5f8 <vfprintf+0x12e>
 5dc:	83 35       	cpi	r24, 0x53	; 83
 5de:	09 f0       	breq	.+2      	; 0x5e2 <vfprintf+0x118>
 5e0:	59 c0       	rjmp	.+178    	; 0x694 <vfprintf+0x1ca>
 5e2:	21 c0       	rjmp	.+66     	; 0x626 <vfprintf+0x15c>
 5e4:	f8 01       	movw	r30, r16
 5e6:	80 81       	ld	r24, Z
 5e8:	89 83       	std	Y+1, r24	; 0x01
 5ea:	0e 5f       	subi	r16, 0xFE	; 254
 5ec:	1f 4f       	sbci	r17, 0xFF	; 255
 5ee:	88 24       	eor	r8, r8
 5f0:	83 94       	inc	r8
 5f2:	91 2c       	mov	r9, r1
 5f4:	53 01       	movw	r10, r6
 5f6:	13 c0       	rjmp	.+38     	; 0x61e <vfprintf+0x154>
 5f8:	28 01       	movw	r4, r16
 5fa:	f2 e0       	ldi	r31, 0x02	; 2
 5fc:	4f 0e       	add	r4, r31
 5fe:	51 1c       	adc	r5, r1
 600:	f8 01       	movw	r30, r16
 602:	a0 80       	ld	r10, Z
 604:	b1 80       	ldd	r11, Z+1	; 0x01
 606:	36 fe       	sbrs	r3, 6
 608:	03 c0       	rjmp	.+6      	; 0x610 <vfprintf+0x146>
 60a:	69 2d       	mov	r22, r9
 60c:	70 e0       	ldi	r23, 0x00	; 0
 60e:	02 c0       	rjmp	.+4      	; 0x614 <vfprintf+0x14a>
 610:	6f ef       	ldi	r22, 0xFF	; 255
 612:	7f ef       	ldi	r23, 0xFF	; 255
 614:	c5 01       	movw	r24, r10
 616:	0e 94 51 04 	call	0x8a2	; 0x8a2 <strnlen>
 61a:	4c 01       	movw	r8, r24
 61c:	82 01       	movw	r16, r4
 61e:	f3 2d       	mov	r31, r3
 620:	ff 77       	andi	r31, 0x7F	; 127
 622:	3f 2e       	mov	r3, r31
 624:	16 c0       	rjmp	.+44     	; 0x652 <vfprintf+0x188>
 626:	28 01       	movw	r4, r16
 628:	22 e0       	ldi	r18, 0x02	; 2
 62a:	42 0e       	add	r4, r18
 62c:	51 1c       	adc	r5, r1
 62e:	f8 01       	movw	r30, r16
 630:	a0 80       	ld	r10, Z
 632:	b1 80       	ldd	r11, Z+1	; 0x01
 634:	36 fe       	sbrs	r3, 6
 636:	03 c0       	rjmp	.+6      	; 0x63e <vfprintf+0x174>
 638:	69 2d       	mov	r22, r9
 63a:	70 e0       	ldi	r23, 0x00	; 0
 63c:	02 c0       	rjmp	.+4      	; 0x642 <vfprintf+0x178>
 63e:	6f ef       	ldi	r22, 0xFF	; 255
 640:	7f ef       	ldi	r23, 0xFF	; 255
 642:	c5 01       	movw	r24, r10
 644:	0e 94 46 04 	call	0x88c	; 0x88c <strnlen_P>
 648:	4c 01       	movw	r8, r24
 64a:	f3 2d       	mov	r31, r3
 64c:	f0 68       	ori	r31, 0x80	; 128
 64e:	3f 2e       	mov	r3, r31
 650:	82 01       	movw	r16, r4
 652:	33 fc       	sbrc	r3, 3
 654:	1b c0       	rjmp	.+54     	; 0x68c <vfprintf+0x1c2>
 656:	82 2d       	mov	r24, r2
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	88 16       	cp	r8, r24
 65c:	99 06       	cpc	r9, r25
 65e:	b0 f4       	brcc	.+44     	; 0x68c <vfprintf+0x1c2>
 660:	b6 01       	movw	r22, r12
 662:	80 e2       	ldi	r24, 0x20	; 32
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <fputc>
 66a:	2a 94       	dec	r2
 66c:	f4 cf       	rjmp	.-24     	; 0x656 <vfprintf+0x18c>
 66e:	f5 01       	movw	r30, r10
 670:	37 fc       	sbrc	r3, 7
 672:	85 91       	lpm	r24, Z+
 674:	37 fe       	sbrs	r3, 7
 676:	81 91       	ld	r24, Z+
 678:	5f 01       	movw	r10, r30
 67a:	b6 01       	movw	r22, r12
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <fputc>
 682:	21 10       	cpse	r2, r1
 684:	2a 94       	dec	r2
 686:	21 e0       	ldi	r18, 0x01	; 1
 688:	82 1a       	sub	r8, r18
 68a:	91 08       	sbc	r9, r1
 68c:	81 14       	cp	r8, r1
 68e:	91 04       	cpc	r9, r1
 690:	71 f7       	brne	.-36     	; 0x66e <vfprintf+0x1a4>
 692:	e8 c0       	rjmp	.+464    	; 0x864 <__DATA_REGION_LENGTH__+0x64>
 694:	84 36       	cpi	r24, 0x64	; 100
 696:	11 f0       	breq	.+4      	; 0x69c <vfprintf+0x1d2>
 698:	89 36       	cpi	r24, 0x69	; 105
 69a:	41 f5       	brne	.+80     	; 0x6ec <vfprintf+0x222>
 69c:	f8 01       	movw	r30, r16
 69e:	37 fe       	sbrs	r3, 7
 6a0:	07 c0       	rjmp	.+14     	; 0x6b0 <vfprintf+0x1e6>
 6a2:	60 81       	ld	r22, Z
 6a4:	71 81       	ldd	r23, Z+1	; 0x01
 6a6:	82 81       	ldd	r24, Z+2	; 0x02
 6a8:	93 81       	ldd	r25, Z+3	; 0x03
 6aa:	0c 5f       	subi	r16, 0xFC	; 252
 6ac:	1f 4f       	sbci	r17, 0xFF	; 255
 6ae:	08 c0       	rjmp	.+16     	; 0x6c0 <vfprintf+0x1f6>
 6b0:	60 81       	ld	r22, Z
 6b2:	71 81       	ldd	r23, Z+1	; 0x01
 6b4:	07 2e       	mov	r0, r23
 6b6:	00 0c       	add	r0, r0
 6b8:	88 0b       	sbc	r24, r24
 6ba:	99 0b       	sbc	r25, r25
 6bc:	0e 5f       	subi	r16, 0xFE	; 254
 6be:	1f 4f       	sbci	r17, 0xFF	; 255
 6c0:	f3 2d       	mov	r31, r3
 6c2:	ff 76       	andi	r31, 0x6F	; 111
 6c4:	3f 2e       	mov	r3, r31
 6c6:	97 ff       	sbrs	r25, 7
 6c8:	09 c0       	rjmp	.+18     	; 0x6dc <vfprintf+0x212>
 6ca:	90 95       	com	r25
 6cc:	80 95       	com	r24
 6ce:	70 95       	com	r23
 6d0:	61 95       	neg	r22
 6d2:	7f 4f       	sbci	r23, 0xFF	; 255
 6d4:	8f 4f       	sbci	r24, 0xFF	; 255
 6d6:	9f 4f       	sbci	r25, 0xFF	; 255
 6d8:	f0 68       	ori	r31, 0x80	; 128
 6da:	3f 2e       	mov	r3, r31
 6dc:	2a e0       	ldi	r18, 0x0A	; 10
 6de:	30 e0       	ldi	r19, 0x00	; 0
 6e0:	a3 01       	movw	r20, r6
 6e2:	0e 94 98 04 	call	0x930	; 0x930 <__ultoa_invert>
 6e6:	88 2e       	mov	r8, r24
 6e8:	86 18       	sub	r8, r6
 6ea:	45 c0       	rjmp	.+138    	; 0x776 <vfprintf+0x2ac>
 6ec:	85 37       	cpi	r24, 0x75	; 117
 6ee:	31 f4       	brne	.+12     	; 0x6fc <vfprintf+0x232>
 6f0:	23 2d       	mov	r18, r3
 6f2:	2f 7e       	andi	r18, 0xEF	; 239
 6f4:	b2 2e       	mov	r11, r18
 6f6:	2a e0       	ldi	r18, 0x0A	; 10
 6f8:	30 e0       	ldi	r19, 0x00	; 0
 6fa:	25 c0       	rjmp	.+74     	; 0x746 <vfprintf+0x27c>
 6fc:	93 2d       	mov	r25, r3
 6fe:	99 7f       	andi	r25, 0xF9	; 249
 700:	b9 2e       	mov	r11, r25
 702:	8f 36       	cpi	r24, 0x6F	; 111
 704:	c1 f0       	breq	.+48     	; 0x736 <vfprintf+0x26c>
 706:	18 f4       	brcc	.+6      	; 0x70e <vfprintf+0x244>
 708:	88 35       	cpi	r24, 0x58	; 88
 70a:	79 f0       	breq	.+30     	; 0x72a <vfprintf+0x260>
 70c:	b5 c0       	rjmp	.+362    	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 70e:	80 37       	cpi	r24, 0x70	; 112
 710:	19 f0       	breq	.+6      	; 0x718 <vfprintf+0x24e>
 712:	88 37       	cpi	r24, 0x78	; 120
 714:	21 f0       	breq	.+8      	; 0x71e <vfprintf+0x254>
 716:	b0 c0       	rjmp	.+352    	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 718:	e9 2f       	mov	r30, r25
 71a:	e0 61       	ori	r30, 0x10	; 16
 71c:	be 2e       	mov	r11, r30
 71e:	b4 fe       	sbrs	r11, 4
 720:	0d c0       	rjmp	.+26     	; 0x73c <vfprintf+0x272>
 722:	fb 2d       	mov	r31, r11
 724:	f4 60       	ori	r31, 0x04	; 4
 726:	bf 2e       	mov	r11, r31
 728:	09 c0       	rjmp	.+18     	; 0x73c <vfprintf+0x272>
 72a:	34 fe       	sbrs	r3, 4
 72c:	0a c0       	rjmp	.+20     	; 0x742 <vfprintf+0x278>
 72e:	29 2f       	mov	r18, r25
 730:	26 60       	ori	r18, 0x06	; 6
 732:	b2 2e       	mov	r11, r18
 734:	06 c0       	rjmp	.+12     	; 0x742 <vfprintf+0x278>
 736:	28 e0       	ldi	r18, 0x08	; 8
 738:	30 e0       	ldi	r19, 0x00	; 0
 73a:	05 c0       	rjmp	.+10     	; 0x746 <vfprintf+0x27c>
 73c:	20 e1       	ldi	r18, 0x10	; 16
 73e:	30 e0       	ldi	r19, 0x00	; 0
 740:	02 c0       	rjmp	.+4      	; 0x746 <vfprintf+0x27c>
 742:	20 e1       	ldi	r18, 0x10	; 16
 744:	32 e0       	ldi	r19, 0x02	; 2
 746:	f8 01       	movw	r30, r16
 748:	b7 fe       	sbrs	r11, 7
 74a:	07 c0       	rjmp	.+14     	; 0x75a <vfprintf+0x290>
 74c:	60 81       	ld	r22, Z
 74e:	71 81       	ldd	r23, Z+1	; 0x01
 750:	82 81       	ldd	r24, Z+2	; 0x02
 752:	93 81       	ldd	r25, Z+3	; 0x03
 754:	0c 5f       	subi	r16, 0xFC	; 252
 756:	1f 4f       	sbci	r17, 0xFF	; 255
 758:	06 c0       	rjmp	.+12     	; 0x766 <vfprintf+0x29c>
 75a:	60 81       	ld	r22, Z
 75c:	71 81       	ldd	r23, Z+1	; 0x01
 75e:	80 e0       	ldi	r24, 0x00	; 0
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	0e 5f       	subi	r16, 0xFE	; 254
 764:	1f 4f       	sbci	r17, 0xFF	; 255
 766:	a3 01       	movw	r20, r6
 768:	0e 94 98 04 	call	0x930	; 0x930 <__ultoa_invert>
 76c:	88 2e       	mov	r8, r24
 76e:	86 18       	sub	r8, r6
 770:	fb 2d       	mov	r31, r11
 772:	ff 77       	andi	r31, 0x7F	; 127
 774:	3f 2e       	mov	r3, r31
 776:	36 fe       	sbrs	r3, 6
 778:	0d c0       	rjmp	.+26     	; 0x794 <vfprintf+0x2ca>
 77a:	23 2d       	mov	r18, r3
 77c:	2e 7f       	andi	r18, 0xFE	; 254
 77e:	a2 2e       	mov	r10, r18
 780:	89 14       	cp	r8, r9
 782:	58 f4       	brcc	.+22     	; 0x79a <vfprintf+0x2d0>
 784:	34 fe       	sbrs	r3, 4
 786:	0b c0       	rjmp	.+22     	; 0x79e <vfprintf+0x2d4>
 788:	32 fc       	sbrc	r3, 2
 78a:	09 c0       	rjmp	.+18     	; 0x79e <vfprintf+0x2d4>
 78c:	83 2d       	mov	r24, r3
 78e:	8e 7e       	andi	r24, 0xEE	; 238
 790:	a8 2e       	mov	r10, r24
 792:	05 c0       	rjmp	.+10     	; 0x79e <vfprintf+0x2d4>
 794:	b8 2c       	mov	r11, r8
 796:	a3 2c       	mov	r10, r3
 798:	03 c0       	rjmp	.+6      	; 0x7a0 <vfprintf+0x2d6>
 79a:	b8 2c       	mov	r11, r8
 79c:	01 c0       	rjmp	.+2      	; 0x7a0 <vfprintf+0x2d6>
 79e:	b9 2c       	mov	r11, r9
 7a0:	a4 fe       	sbrs	r10, 4
 7a2:	0f c0       	rjmp	.+30     	; 0x7c2 <vfprintf+0x2f8>
 7a4:	fe 01       	movw	r30, r28
 7a6:	e8 0d       	add	r30, r8
 7a8:	f1 1d       	adc	r31, r1
 7aa:	80 81       	ld	r24, Z
 7ac:	80 33       	cpi	r24, 0x30	; 48
 7ae:	21 f4       	brne	.+8      	; 0x7b8 <vfprintf+0x2ee>
 7b0:	9a 2d       	mov	r25, r10
 7b2:	99 7e       	andi	r25, 0xE9	; 233
 7b4:	a9 2e       	mov	r10, r25
 7b6:	09 c0       	rjmp	.+18     	; 0x7ca <vfprintf+0x300>
 7b8:	a2 fe       	sbrs	r10, 2
 7ba:	06 c0       	rjmp	.+12     	; 0x7c8 <vfprintf+0x2fe>
 7bc:	b3 94       	inc	r11
 7be:	b3 94       	inc	r11
 7c0:	04 c0       	rjmp	.+8      	; 0x7ca <vfprintf+0x300>
 7c2:	8a 2d       	mov	r24, r10
 7c4:	86 78       	andi	r24, 0x86	; 134
 7c6:	09 f0       	breq	.+2      	; 0x7ca <vfprintf+0x300>
 7c8:	b3 94       	inc	r11
 7ca:	a3 fc       	sbrc	r10, 3
 7cc:	11 c0       	rjmp	.+34     	; 0x7f0 <vfprintf+0x326>
 7ce:	a0 fe       	sbrs	r10, 0
 7d0:	06 c0       	rjmp	.+12     	; 0x7de <vfprintf+0x314>
 7d2:	b2 14       	cp	r11, r2
 7d4:	88 f4       	brcc	.+34     	; 0x7f8 <vfprintf+0x32e>
 7d6:	28 0c       	add	r2, r8
 7d8:	92 2c       	mov	r9, r2
 7da:	9b 18       	sub	r9, r11
 7dc:	0e c0       	rjmp	.+28     	; 0x7fa <vfprintf+0x330>
 7de:	b2 14       	cp	r11, r2
 7e0:	60 f4       	brcc	.+24     	; 0x7fa <vfprintf+0x330>
 7e2:	b6 01       	movw	r22, r12
 7e4:	80 e2       	ldi	r24, 0x20	; 32
 7e6:	90 e0       	ldi	r25, 0x00	; 0
 7e8:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <fputc>
 7ec:	b3 94       	inc	r11
 7ee:	f7 cf       	rjmp	.-18     	; 0x7de <vfprintf+0x314>
 7f0:	b2 14       	cp	r11, r2
 7f2:	18 f4       	brcc	.+6      	; 0x7fa <vfprintf+0x330>
 7f4:	2b 18       	sub	r2, r11
 7f6:	02 c0       	rjmp	.+4      	; 0x7fc <vfprintf+0x332>
 7f8:	98 2c       	mov	r9, r8
 7fa:	21 2c       	mov	r2, r1
 7fc:	a4 fe       	sbrs	r10, 4
 7fe:	10 c0       	rjmp	.+32     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 800:	b6 01       	movw	r22, r12
 802:	80 e3       	ldi	r24, 0x30	; 48
 804:	90 e0       	ldi	r25, 0x00	; 0
 806:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <fputc>
 80a:	a2 fe       	sbrs	r10, 2
 80c:	17 c0       	rjmp	.+46     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 80e:	a1 fc       	sbrc	r10, 1
 810:	03 c0       	rjmp	.+6      	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 812:	88 e7       	ldi	r24, 0x78	; 120
 814:	90 e0       	ldi	r25, 0x00	; 0
 816:	02 c0       	rjmp	.+4      	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 818:	88 e5       	ldi	r24, 0x58	; 88
 81a:	90 e0       	ldi	r25, 0x00	; 0
 81c:	b6 01       	movw	r22, r12
 81e:	0c c0       	rjmp	.+24     	; 0x838 <__DATA_REGION_LENGTH__+0x38>
 820:	8a 2d       	mov	r24, r10
 822:	86 78       	andi	r24, 0x86	; 134
 824:	59 f0       	breq	.+22     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 826:	a1 fe       	sbrs	r10, 1
 828:	02 c0       	rjmp	.+4      	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 82a:	8b e2       	ldi	r24, 0x2B	; 43
 82c:	01 c0       	rjmp	.+2      	; 0x830 <__DATA_REGION_LENGTH__+0x30>
 82e:	80 e2       	ldi	r24, 0x20	; 32
 830:	a7 fc       	sbrc	r10, 7
 832:	8d e2       	ldi	r24, 0x2D	; 45
 834:	b6 01       	movw	r22, r12
 836:	90 e0       	ldi	r25, 0x00	; 0
 838:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <fputc>
 83c:	89 14       	cp	r8, r9
 83e:	38 f4       	brcc	.+14     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 840:	b6 01       	movw	r22, r12
 842:	80 e3       	ldi	r24, 0x30	; 48
 844:	90 e0       	ldi	r25, 0x00	; 0
 846:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <fputc>
 84a:	9a 94       	dec	r9
 84c:	f7 cf       	rjmp	.-18     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 84e:	8a 94       	dec	r8
 850:	f3 01       	movw	r30, r6
 852:	e8 0d       	add	r30, r8
 854:	f1 1d       	adc	r31, r1
 856:	80 81       	ld	r24, Z
 858:	b6 01       	movw	r22, r12
 85a:	90 e0       	ldi	r25, 0x00	; 0
 85c:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <fputc>
 860:	81 10       	cpse	r8, r1
 862:	f5 cf       	rjmp	.-22     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 864:	22 20       	and	r2, r2
 866:	09 f4       	brne	.+2      	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 868:	42 ce       	rjmp	.-892    	; 0x4ee <vfprintf+0x24>
 86a:	b6 01       	movw	r22, r12
 86c:	80 e2       	ldi	r24, 0x20	; 32
 86e:	90 e0       	ldi	r25, 0x00	; 0
 870:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <fputc>
 874:	2a 94       	dec	r2
 876:	f6 cf       	rjmp	.-20     	; 0x864 <__DATA_REGION_LENGTH__+0x64>
 878:	f6 01       	movw	r30, r12
 87a:	86 81       	ldd	r24, Z+6	; 0x06
 87c:	97 81       	ldd	r25, Z+7	; 0x07
 87e:	02 c0       	rjmp	.+4      	; 0x884 <__DATA_REGION_LENGTH__+0x84>
 880:	8f ef       	ldi	r24, 0xFF	; 255
 882:	9f ef       	ldi	r25, 0xFF	; 255
 884:	2b 96       	adiw	r28, 0x0b	; 11
 886:	e2 e1       	ldi	r30, 0x12	; 18
 888:	0c 94 12 05 	jmp	0xa24	; 0xa24 <__epilogue_restores__>

0000088c <strnlen_P>:
 88c:	fc 01       	movw	r30, r24
 88e:	05 90       	lpm	r0, Z+
 890:	61 50       	subi	r22, 0x01	; 1
 892:	70 40       	sbci	r23, 0x00	; 0
 894:	01 10       	cpse	r0, r1
 896:	d8 f7       	brcc	.-10     	; 0x88e <strnlen_P+0x2>
 898:	80 95       	com	r24
 89a:	90 95       	com	r25
 89c:	8e 0f       	add	r24, r30
 89e:	9f 1f       	adc	r25, r31
 8a0:	08 95       	ret

000008a2 <strnlen>:
 8a2:	fc 01       	movw	r30, r24
 8a4:	61 50       	subi	r22, 0x01	; 1
 8a6:	70 40       	sbci	r23, 0x00	; 0
 8a8:	01 90       	ld	r0, Z+
 8aa:	01 10       	cpse	r0, r1
 8ac:	d8 f7       	brcc	.-10     	; 0x8a4 <strnlen+0x2>
 8ae:	80 95       	com	r24
 8b0:	90 95       	com	r25
 8b2:	8e 0f       	add	r24, r30
 8b4:	9f 1f       	adc	r25, r31
 8b6:	08 95       	ret

000008b8 <fputc>:
 8b8:	0f 93       	push	r16
 8ba:	1f 93       	push	r17
 8bc:	cf 93       	push	r28
 8be:	df 93       	push	r29
 8c0:	fb 01       	movw	r30, r22
 8c2:	23 81       	ldd	r18, Z+3	; 0x03
 8c4:	21 fd       	sbrc	r18, 1
 8c6:	03 c0       	rjmp	.+6      	; 0x8ce <fputc+0x16>
 8c8:	8f ef       	ldi	r24, 0xFF	; 255
 8ca:	9f ef       	ldi	r25, 0xFF	; 255
 8cc:	2c c0       	rjmp	.+88     	; 0x926 <__stack+0x27>
 8ce:	22 ff       	sbrs	r18, 2
 8d0:	16 c0       	rjmp	.+44     	; 0x8fe <fputc+0x46>
 8d2:	46 81       	ldd	r20, Z+6	; 0x06
 8d4:	57 81       	ldd	r21, Z+7	; 0x07
 8d6:	24 81       	ldd	r18, Z+4	; 0x04
 8d8:	35 81       	ldd	r19, Z+5	; 0x05
 8da:	42 17       	cp	r20, r18
 8dc:	53 07       	cpc	r21, r19
 8de:	44 f4       	brge	.+16     	; 0x8f0 <fputc+0x38>
 8e0:	a0 81       	ld	r26, Z
 8e2:	b1 81       	ldd	r27, Z+1	; 0x01
 8e4:	9d 01       	movw	r18, r26
 8e6:	2f 5f       	subi	r18, 0xFF	; 255
 8e8:	3f 4f       	sbci	r19, 0xFF	; 255
 8ea:	31 83       	std	Z+1, r19	; 0x01
 8ec:	20 83       	st	Z, r18
 8ee:	8c 93       	st	X, r24
 8f0:	26 81       	ldd	r18, Z+6	; 0x06
 8f2:	37 81       	ldd	r19, Z+7	; 0x07
 8f4:	2f 5f       	subi	r18, 0xFF	; 255
 8f6:	3f 4f       	sbci	r19, 0xFF	; 255
 8f8:	37 83       	std	Z+7, r19	; 0x07
 8fa:	26 83       	std	Z+6, r18	; 0x06
 8fc:	14 c0       	rjmp	.+40     	; 0x926 <__stack+0x27>
 8fe:	8b 01       	movw	r16, r22
 900:	ec 01       	movw	r28, r24
 902:	fb 01       	movw	r30, r22
 904:	00 84       	ldd	r0, Z+8	; 0x08
 906:	f1 85       	ldd	r31, Z+9	; 0x09
 908:	e0 2d       	mov	r30, r0
 90a:	09 95       	icall
 90c:	89 2b       	or	r24, r25
 90e:	e1 f6       	brne	.-72     	; 0x8c8 <fputc+0x10>
 910:	d8 01       	movw	r26, r16
 912:	16 96       	adiw	r26, 0x06	; 6
 914:	8d 91       	ld	r24, X+
 916:	9c 91       	ld	r25, X
 918:	17 97       	sbiw	r26, 0x07	; 7
 91a:	01 96       	adiw	r24, 0x01	; 1
 91c:	17 96       	adiw	r26, 0x07	; 7
 91e:	9c 93       	st	X, r25
 920:	8e 93       	st	-X, r24
 922:	16 97       	sbiw	r26, 0x06	; 6
 924:	ce 01       	movw	r24, r28
 926:	df 91       	pop	r29
 928:	cf 91       	pop	r28
 92a:	1f 91       	pop	r17
 92c:	0f 91       	pop	r16
 92e:	08 95       	ret

00000930 <__ultoa_invert>:
 930:	fa 01       	movw	r30, r20
 932:	aa 27       	eor	r26, r26
 934:	28 30       	cpi	r18, 0x08	; 8
 936:	51 f1       	breq	.+84     	; 0x98c <__ultoa_invert+0x5c>
 938:	20 31       	cpi	r18, 0x10	; 16
 93a:	81 f1       	breq	.+96     	; 0x99c <__ultoa_invert+0x6c>
 93c:	e8 94       	clt
 93e:	6f 93       	push	r22
 940:	6e 7f       	andi	r22, 0xFE	; 254
 942:	6e 5f       	subi	r22, 0xFE	; 254
 944:	7f 4f       	sbci	r23, 0xFF	; 255
 946:	8f 4f       	sbci	r24, 0xFF	; 255
 948:	9f 4f       	sbci	r25, 0xFF	; 255
 94a:	af 4f       	sbci	r26, 0xFF	; 255
 94c:	b1 e0       	ldi	r27, 0x01	; 1
 94e:	3e d0       	rcall	.+124    	; 0x9cc <__ultoa_invert+0x9c>
 950:	b4 e0       	ldi	r27, 0x04	; 4
 952:	3c d0       	rcall	.+120    	; 0x9cc <__ultoa_invert+0x9c>
 954:	67 0f       	add	r22, r23
 956:	78 1f       	adc	r23, r24
 958:	89 1f       	adc	r24, r25
 95a:	9a 1f       	adc	r25, r26
 95c:	a1 1d       	adc	r26, r1
 95e:	68 0f       	add	r22, r24
 960:	79 1f       	adc	r23, r25
 962:	8a 1f       	adc	r24, r26
 964:	91 1d       	adc	r25, r1
 966:	a1 1d       	adc	r26, r1
 968:	6a 0f       	add	r22, r26
 96a:	71 1d       	adc	r23, r1
 96c:	81 1d       	adc	r24, r1
 96e:	91 1d       	adc	r25, r1
 970:	a1 1d       	adc	r26, r1
 972:	20 d0       	rcall	.+64     	; 0x9b4 <__ultoa_invert+0x84>
 974:	09 f4       	brne	.+2      	; 0x978 <__ultoa_invert+0x48>
 976:	68 94       	set
 978:	3f 91       	pop	r19
 97a:	2a e0       	ldi	r18, 0x0A	; 10
 97c:	26 9f       	mul	r18, r22
 97e:	11 24       	eor	r1, r1
 980:	30 19       	sub	r19, r0
 982:	30 5d       	subi	r19, 0xD0	; 208
 984:	31 93       	st	Z+, r19
 986:	de f6       	brtc	.-74     	; 0x93e <__ultoa_invert+0xe>
 988:	cf 01       	movw	r24, r30
 98a:	08 95       	ret
 98c:	46 2f       	mov	r20, r22
 98e:	47 70       	andi	r20, 0x07	; 7
 990:	40 5d       	subi	r20, 0xD0	; 208
 992:	41 93       	st	Z+, r20
 994:	b3 e0       	ldi	r27, 0x03	; 3
 996:	0f d0       	rcall	.+30     	; 0x9b6 <__ultoa_invert+0x86>
 998:	c9 f7       	brne	.-14     	; 0x98c <__ultoa_invert+0x5c>
 99a:	f6 cf       	rjmp	.-20     	; 0x988 <__ultoa_invert+0x58>
 99c:	46 2f       	mov	r20, r22
 99e:	4f 70       	andi	r20, 0x0F	; 15
 9a0:	40 5d       	subi	r20, 0xD0	; 208
 9a2:	4a 33       	cpi	r20, 0x3A	; 58
 9a4:	18 f0       	brcs	.+6      	; 0x9ac <__ultoa_invert+0x7c>
 9a6:	49 5d       	subi	r20, 0xD9	; 217
 9a8:	31 fd       	sbrc	r19, 1
 9aa:	40 52       	subi	r20, 0x20	; 32
 9ac:	41 93       	st	Z+, r20
 9ae:	02 d0       	rcall	.+4      	; 0x9b4 <__ultoa_invert+0x84>
 9b0:	a9 f7       	brne	.-22     	; 0x99c <__ultoa_invert+0x6c>
 9b2:	ea cf       	rjmp	.-44     	; 0x988 <__ultoa_invert+0x58>
 9b4:	b4 e0       	ldi	r27, 0x04	; 4
 9b6:	a6 95       	lsr	r26
 9b8:	97 95       	ror	r25
 9ba:	87 95       	ror	r24
 9bc:	77 95       	ror	r23
 9be:	67 95       	ror	r22
 9c0:	ba 95       	dec	r27
 9c2:	c9 f7       	brne	.-14     	; 0x9b6 <__ultoa_invert+0x86>
 9c4:	00 97       	sbiw	r24, 0x00	; 0
 9c6:	61 05       	cpc	r22, r1
 9c8:	71 05       	cpc	r23, r1
 9ca:	08 95       	ret
 9cc:	9b 01       	movw	r18, r22
 9ce:	ac 01       	movw	r20, r24
 9d0:	0a 2e       	mov	r0, r26
 9d2:	06 94       	lsr	r0
 9d4:	57 95       	ror	r21
 9d6:	47 95       	ror	r20
 9d8:	37 95       	ror	r19
 9da:	27 95       	ror	r18
 9dc:	ba 95       	dec	r27
 9de:	c9 f7       	brne	.-14     	; 0x9d2 <__ultoa_invert+0xa2>
 9e0:	62 0f       	add	r22, r18
 9e2:	73 1f       	adc	r23, r19
 9e4:	84 1f       	adc	r24, r20
 9e6:	95 1f       	adc	r25, r21
 9e8:	a0 1d       	adc	r26, r0
 9ea:	08 95       	ret

000009ec <__prologue_saves__>:
 9ec:	2f 92       	push	r2
 9ee:	3f 92       	push	r3
 9f0:	4f 92       	push	r4
 9f2:	5f 92       	push	r5
 9f4:	6f 92       	push	r6
 9f6:	7f 92       	push	r7
 9f8:	8f 92       	push	r8
 9fa:	9f 92       	push	r9
 9fc:	af 92       	push	r10
 9fe:	bf 92       	push	r11
 a00:	cf 92       	push	r12
 a02:	df 92       	push	r13
 a04:	ef 92       	push	r14
 a06:	ff 92       	push	r15
 a08:	0f 93       	push	r16
 a0a:	1f 93       	push	r17
 a0c:	cf 93       	push	r28
 a0e:	df 93       	push	r29
 a10:	cd b7       	in	r28, 0x3d	; 61
 a12:	de b7       	in	r29, 0x3e	; 62
 a14:	ca 1b       	sub	r28, r26
 a16:	db 0b       	sbc	r29, r27
 a18:	0f b6       	in	r0, 0x3f	; 63
 a1a:	f8 94       	cli
 a1c:	de bf       	out	0x3e, r29	; 62
 a1e:	0f be       	out	0x3f, r0	; 63
 a20:	cd bf       	out	0x3d, r28	; 61
 a22:	09 94       	ijmp

00000a24 <__epilogue_restores__>:
 a24:	2a 88       	ldd	r2, Y+18	; 0x12
 a26:	39 88       	ldd	r3, Y+17	; 0x11
 a28:	48 88       	ldd	r4, Y+16	; 0x10
 a2a:	5f 84       	ldd	r5, Y+15	; 0x0f
 a2c:	6e 84       	ldd	r6, Y+14	; 0x0e
 a2e:	7d 84       	ldd	r7, Y+13	; 0x0d
 a30:	8c 84       	ldd	r8, Y+12	; 0x0c
 a32:	9b 84       	ldd	r9, Y+11	; 0x0b
 a34:	aa 84       	ldd	r10, Y+10	; 0x0a
 a36:	b9 84       	ldd	r11, Y+9	; 0x09
 a38:	c8 84       	ldd	r12, Y+8	; 0x08
 a3a:	df 80       	ldd	r13, Y+7	; 0x07
 a3c:	ee 80       	ldd	r14, Y+6	; 0x06
 a3e:	fd 80       	ldd	r15, Y+5	; 0x05
 a40:	0c 81       	ldd	r16, Y+4	; 0x04
 a42:	1b 81       	ldd	r17, Y+3	; 0x03
 a44:	aa 81       	ldd	r26, Y+2	; 0x02
 a46:	b9 81       	ldd	r27, Y+1	; 0x01
 a48:	ce 0f       	add	r28, r30
 a4a:	d1 1d       	adc	r29, r1
 a4c:	0f b6       	in	r0, 0x3f	; 63
 a4e:	f8 94       	cli
 a50:	de bf       	out	0x3e, r29	; 62
 a52:	0f be       	out	0x3f, r0	; 63
 a54:	cd bf       	out	0x3d, r28	; 61
 a56:	ed 01       	movw	r28, r26
 a58:	08 95       	ret

00000a5a <_exit>:
 a5a:	f8 94       	cli

00000a5c <__stop_program>:
 a5c:	ff cf       	rjmp	.-2      	; 0xa5c <__stop_program>
